<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration>

    <springProperty scope="context" name="log_folder" source="service.logs.folder" defaultValue="./logs"/>
    <springProperty scope="context" name="application_name" source="spring.application.name"/>
    <springProperty scope="context" name="source_system" source="service.params.source-system" defaultValue="TEMPLATE-BACKEND"/>
    <springProperty scope="context" name="logging-method" source="service.params.logging-method"
                    defaultValue="flat-console"/>

    <appender name="JsonConsole" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
        </encoder>
    </appender>

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1}): %msg%n%throwable
            </Pattern>
        </layout>
    </appender>

    <appender name="RollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_folder}/${application_name}.log</file>
        <encoder
            class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d %p %C{1} [%t] %m%n</Pattern>
        </encoder>

        <rollingPolicy
            class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
            <fileNamePattern>${log_folder}/archived/${application_name}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="RollingJsonFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_folder}/${source_system}-rna-backend-json.log</file>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
                <jsonFormatter
                        class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                    <prettyPrint>true</prettyPrint>
                </jsonFormatter>
                <timestampFormat>yyyy-MM-dd' 'HH:mm:ss.SSS</timestampFormat>
            </layout>
        </encoder>

        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
            <fileNamePattern>${log_folder}/archived/${source_system}-rna-backend-json-%d{yyyy-MM}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>

        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
    </appender>

    <!-- LOG everything at INFO level -->
    <root level="info">
        <if condition='property("logging-method").contains("json-console")'>
            <then>
                <appender-ref ref="JsonConsole"/>
            </then>
        </if>
        <if condition='property("logging-method").contains("json-file")'>
            <then>
                <appender-ref ref="RollingJsonFile"/>
            </then>
        </if>
        <if condition='property("logging-method").contains("flat-file")'>
            <then>
                <appender-ref ref="Console"/>
                <appender-ref ref="RollingFile"/>
            </then>
        </if>
        <if condition='property("logging-method").contains("flat-console")'>
            <then>
                <appender-ref ref="Console"/>
            </then>
        </if>
    </root>

</configuration>